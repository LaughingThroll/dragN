{"version":3,"sources":["constant.js","components/Sidebar.js","components/FlowWrapper.js","api/db.js","components/App.js","index.js"],"names":["APPLICATION_REACT_FLOW","REACT_FLOW_NODE_TYPE","Sidebar","data","setCurrentItem","className","map","el","onDragStart","e","nodeType","currentEl","dataTransfer","setData","effectAllowed","onDragStartHandler","draggable","name","id","FlowWrapper","currentItem","flowRef","useRef","useState","elementsFlow","setElementsFlow","reactFlowInstance","setReactFlowInstance","ref","elements","onConnect","params","addEdge","onLoad","onDragOver","preventDefault","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newElementFlow","Date","now","toString","label","onElementsRemove","elementsToRemove","removeElements","lang","App","items","setItems","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAaA,EAAyB,wBAEzBC,EACF,U,OCqBIC,EApBC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eAOvB,OACE,uBAAOC,UAAU,2BAAjB,SACE,oBAAIA,UAAU,aAAd,SACGF,EAAKG,KAAI,SAAAC,GACR,OAAO,oBAAgBF,UAAU,mBAAmBG,YAAa,SAACC,GAAD,OAV9C,SAACA,EAAGC,EAAUC,GACvCF,EAAEG,aAAaC,QAAQb,EAAwBU,GAC/CD,EAAEG,aAAaE,cAAgB,OAC/BV,EAAeO,GAO+DI,CAAmBN,EAAGR,EAA8BM,IAAKS,WAAS,EAAnI,SACJT,EAAGU,MADUV,EAAGW,Y,QCmDdC,EA7DK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACfC,EAAUC,iBAAO,MADgB,EAGCC,mBAAS,IAHV,mBAGhCC,EAHgC,KAGlBC,EAHkB,OAIWF,mBAAS,MAJpB,mBAIhCG,EAJgC,KAIbC,EAJa,KA+CvC,OACE,qBAAKtB,UAAU,yBAAyBuB,IAAKP,EAA7C,SACE,cAAC,IAAD,CACEQ,SAAUL,EACVM,UA7CmB,SAACC,GACxBN,EAAgBO,YAAQD,EAAQP,KA6C5BS,OA3CoB,SAACP,GACzBC,EAAqBD,IA2CjBQ,WApCoB,SAACzB,GACzBA,EAAE0B,iBACF1B,EAAEG,aAAawB,WAAa,QAmCxBC,OAhCgB,SAAC5B,GACrBA,EAAE0B,iBAEF,IAAMG,EAAkBjB,EAAQkB,QAAQC,wBAClCC,EAAOhC,EAAEG,aAAa8B,QAAQ1C,GAC9B2C,EAAWjB,EAAkBkB,QAAQ,CACzCC,EAAGpC,EAAEqC,QAAUR,EAAgBS,KAC/BC,EAAGvC,EAAEwC,QAAUX,EAAgBY,MAG3BC,EAAiB,CACrBjC,GAAIkC,KAAKC,MAAMC,WACfb,OACAE,WACAxC,KAAM,CACJoD,MACE,mCAAMnC,EAAYH,KAAlB,kBAKNQ,EAAgB,GAAD,mBAAKD,GAAL,CAAmB2B,MAY9BK,iBA1CkB,SAACC,GACvBhC,EAAgBiC,YAAeD,EAAkBjC,UCDtCrB,EAlBF,CACX,CACEe,GAAI,GACJD,KAAM,QACN0C,KAAM,MAER,CACEzC,GAAI,GACJD,KAAM,uCACN0C,KAAM,MAER,CACEzC,GAAI,EACJD,KAAM,UACN0C,KAAM,OCgBKC,EArBH,WAAO,IAAD,EACUrC,mBAAS,IADnB,mBACTsC,EADS,KACFC,EADE,OAEsBvC,mBAAS,MAF/B,mBAETH,EAFS,KAEIhB,EAFJ,KAShB,OAJA2D,qBAAU,WACRD,EAAS3D,KACR,IAGD,qBAAKE,UAAU,kBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAASF,KAAM0D,EAAOzD,eAAgBA,IACtC,cAAC,EAAD,CAAagB,YAAaA,Y,MCfpC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.868f849e.chunk.js","sourcesContent":["export const APPLICATION_REACT_FLOW = 'application/reactflow'\r\n\r\nexport const REACT_FLOW_NODE_TYPE = {\r\n  DEFAULT: 'default',\r\n  INPUT: 'input',\r\n  OUTPUT: 'output'\r\n}","import React from 'react'\r\n\r\nimport { APPLICATION_REACT_FLOW, REACT_FLOW_NODE_TYPE } from './../constant'\r\n\r\nconst Sidebar = ({ data, setCurrentItem }) => {  \r\n  const onDragStartHandler = (e, nodeType, currentEl) => {\r\n    e.dataTransfer.setData(APPLICATION_REACT_FLOW, nodeType)\r\n    e.dataTransfer.effectAllowed = 'move'\r\n    setCurrentItem(currentEl)\r\n  }\r\n\r\n  return (\r\n    <aside className=\"drag-n-drop__aside aside\">\r\n      <ul className=\"aside-list\">\r\n        {data.map(el => {\r\n          return <li key={el.id} className=\"aside-list__item\" onDragStart={(e) => onDragStartHandler(e, REACT_FLOW_NODE_TYPE.DEFAULT, el)} draggable >\r\n            {el.name}\r\n          </li>\r\n        })}\r\n      </ul>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useRef } from 'react'\r\nimport ReactFlow, { addEdge, removeElements } from 'react-flow-renderer'\r\n\r\nimport { APPLICATION_REACT_FLOW } from './../constant' \r\n\r\nconst FlowWrapper = ({ currentItem }) => {\r\n  const flowRef = useRef(null)\r\n\r\n  const [elementsFlow, setElementsFlow] = useState([])\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null)\r\n\r\n  const onConnectHandler = (params) => {\r\n    setElementsFlow(addEdge(params, elementsFlow))\r\n  }\r\n  const onLoadFlowHandler = (reactFlowInstance) => {\r\n    setReactFlowInstance(reactFlowInstance)\r\n  }\r\n\r\n  const onRemoveHandler = (elementsToRemove) => {\r\n    setElementsFlow(removeElements(elementsToRemove, elementsFlow))\r\n  }\r\n\r\n  const onDragOverHandler = (e) => {\r\n    e.preventDefault()\r\n    e.dataTransfer.dropEffect = 'move'\r\n  }\r\n\r\n  const onDropHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const reactFlowBounds = flowRef.current.getBoundingClientRect()\r\n    const type = e.dataTransfer.getData(APPLICATION_REACT_FLOW)\r\n    const position = reactFlowInstance.project({\r\n      x: e.clientX - reactFlowBounds.left,\r\n      y: e.clientY - reactFlowBounds.top\r\n    })\r\n\r\n    const newElementFlow = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      position,\r\n      data: {\r\n        label: (\r\n          <h1> {currentItem.name} World !!!</h1>\r\n        )\r\n      }\r\n    }\r\n\r\n    setElementsFlow([...elementsFlow, newElementFlow])\r\n\r\n  } \r\n\r\n  return (\r\n    <div className=\"drag-n-drop__flow flow\" ref={flowRef}>\r\n      <ReactFlow\r\n        elements={elementsFlow}\r\n        onConnect={onConnectHandler}\r\n        onLoad={onLoadFlowHandler}\r\n        onDragOver={onDragOverHandler}\r\n        onDrop={onDropHandler}\r\n        onElementsRemove={onRemoveHandler}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FlowWrapper\r\n","const data = [\r\n  {\r\n    id: 12,\r\n    name: 'HEllo',\r\n    lang: 'en'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Привет',\r\n    lang: 'ru'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Bonjour',\r\n    lang: 'fr'\r\n  }\r\n]\r\n\r\nexport default data","import React, { useState, useEffect } from 'react'\r\nimport { ReactFlowProvider } from 'react-flow-renderer'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport FlowWrapper from './FlowWrapper'\r\n\r\nimport data from './../api/db'\r\n\r\n\r\nconst App = () => {\r\n  const [items, setItems] = useState([])\r\n  const [currentItem, setCurrentItem] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    setItems(data)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"drag-n-drop\">\r\n        <ReactFlowProvider>\r\n          <Sidebar data={items} setCurrentItem={setCurrentItem} />\r\n          <FlowWrapper currentItem={currentItem} />\r\n        </ReactFlowProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App'\r\n\r\nimport './styles/styles.scss'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}